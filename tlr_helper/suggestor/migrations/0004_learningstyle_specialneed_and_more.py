# Generated by Django 5.2.1 on 2025-06-01 22:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('suggestor', '0003_strand_subject'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LearningStyle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpecialNeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='tlr',
            name='learning_difficulty',
        ),
        migrations.AddField(
            model_name='contentstandard',
            name='competencies',
            field=models.ManyToManyField(blank=True, to='suggestor.corecompetency'),
        ),
        migrations.AddField(
            model_name='contentstandard',
            name='goals',
            field=models.ManyToManyField(blank=True, to='suggestor.goaltag'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='competencies',
            field=models.ManyToManyField(blank=True, to='suggestor.corecompetency'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='goals',
            field=models.ManyToManyField(blank=True, to='suggestor.goaltag'),
        ),
        migrations.AddField(
            model_name='strand',
            name='competencies',
            field=models.ManyToManyField(blank=True, to='suggestor.corecompetency'),
        ),
        migrations.AddField(
            model_name='strand',
            name='key_learning_areas',
            field=models.ManyToManyField(blank=True, to='suggestor.keylearningarea'),
        ),
        migrations.AddField(
            model_name='strand',
            name='slug',
            field=models.SlugField(blank=True),
        ),
        migrations.AddField(
            model_name='strand',
            name='themes',
            field=models.ManyToManyField(blank=True, to='suggestor.theme'),
        ),
        migrations.AddField(
            model_name='substrand',
            name='slug',
            field=models.SlugField(blank=True),
        ),
        migrations.AddField(
            model_name='tlr',
            name='bloom_level',
            field=models.CharField(blank=True, choices=[('remember', 'Remember (recall facts, terms)'), ('understand', 'Understand (explain ideas)'), ('apply', 'Apply (use info in new ways)'), ('analyze', 'Analyze (compare, contrast)'), ('evaluate', 'Evaluate (defend opinions, judge value)'), ('create', 'Create (develop or brain storm on idea)')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='tlr',
            name='budget_band',
            field=models.CharField(blank=True, choices=[('none', '₵0 (No cost – use recycled or available materials)'), ('low', '₵1 – ₵10'), ('medium', '₵11 – ₵30'), ('high', '₵31 – ₵100'), ('very_high', '₵101+')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='tlr',
            name='class_size',
            field=models.CharField(blank=True, choices=[('small', '≤ 25'), ('medium', '26 – 40'), ('large', '41+')], max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='tlr',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tlr',
            name='download_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='tlr',
            name='is_published',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='tlr',
            name='last_updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='tlr',
            name='learning_outcome',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='tlr',
            name='search_keywords',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='tlr',
            name='slug',
            field=models.SlugField(blank=True, unique=True),
        ),
        migrations.AddField(
            model_name='tlr',
            name='standard',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='suggestor.contentstandard'),
        ),
        migrations.AlterField(
            model_name='contentstandard',
            name='substrand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standards', to='suggestor.substrand'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='standard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicators', to='suggestor.contentstandard'),
        ),
        migrations.AlterField(
            model_name='strand',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='strands', to='suggestor.subject'),
        ),
        migrations.AlterField(
            model_name='substrand',
            name='strand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substrands', to='suggestor.strand'),
        ),
        migrations.AlterField(
            model_name='tlr',
            name='time_needed',
            field=models.CharField(choices=[('starter', 'Starter activity (5–10 mins)'), ('short', 'Short activity (10–20 mins)'), ('core', 'Main activity (20–40 mins)'), ('wrap', 'Wrap-up / Review (5–15 mins)'), ('homework', 'Homework / Take-home'), ('reusable', 'Reusable or ongoing resource')], default='lesson', max_length=10),
        ),
        migrations.AlterField(
            model_name='tlr',
            name='tlr_type',
            field=models.CharField(blank=True, choices=[('manipulative', 'Manipulative'), ('flashcard', 'Flashcard'), ('poster', 'Poster'), ('audio', 'Audio'), ('video', 'Video'), ('game', 'Game')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='tlr',
            name='learning_styles',
            field=models.ManyToManyField(blank=True, to='suggestor.learningstyle'),
        ),
        migrations.AddField(
            model_name='tlr',
            name='special_needs',
            field=models.ManyToManyField(blank=True, to='suggestor.specialneed'),
        ),
        migrations.CreateModel(
            name='TlrImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='tlr_images/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('tlr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='suggestor.tlr')),
            ],
        ),
        migrations.CreateModel(
            name='TlrVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('tlr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='suggestor.tlr')),
            ],
        ),
    ]
